{"ast":null,"code":"import * as gameActions from '../../../ngrx-store/game.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../game-card/game-card.component\";\n\nfunction GameListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-game-card\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const game_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"game\", game_r1);\n  }\n}\n\nexport class GameListComponent {\n  constructor(store) {\n    this.store = store;\n    this.selectedCategoryGameItems$ = this.store.select(state => state.games.selectedCategoryGameItems);\n    this.store.select(state => state.games).subscribe(state => {\n      if (!state.selectedCategoryGameItems?.category.hasJackpot) {\n        return this.store.dispatch(new gameActions.StopRefresh());\n      }\n\n      this.store.dispatch(new gameActions.GetJackpots({\n        allCategoriesGameItems: state.allCategoriesGameItems,\n        selectedCategoryGameItems: state.selectedCategoryGameItems\n      }));\n    });\n  }\n\n}\n\nGameListComponent.ɵfac = function GameListComponent_Factory(t) {\n  return new (t || GameListComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nGameListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameListComponent,\n  selectors: [[\"app-game-list\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"grid\"], [4, \"ngFor\", \"ngForOf\"], [3, \"game\"]],\n  template: function GameListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, GameListComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_0_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", (tmp_0_0 = i0.ɵɵpipeBind1(2, 1, ctx.selectedCategoryGameItems$)) == null ? null : tmp_0_0.games);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.GameCardComponent, i2.AsyncPipe],\n  styles: [\".grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, 180px);\\n  padding-left: 20px;\\n  padding-right: 20px;\\n  padding-top: 25px;\\n  column-gap: 10px;\\n  row-gap: 25px;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWUtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSwrQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FBQ0YiLCJmaWxlIjoiZ2FtZS1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyaWQge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW4oMTgwcHgpKTtcclxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgcGFkZGluZy1yaWdodDogMjBweDtcclxuICBwYWRkaW5nLXRvcDogMjVweDtcclxuICBjb2x1bW4tZ2FwOiAxMHB4O1xyXG4gIHJvdy1nYXA6IDI1cHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"mappings":"AAMA,OAAO,KAAKA,WAAZ,MAA6B,kCAA7B;;;;;;;;ICLEC;IACEA;IACFA;;;;;IADiBA;IAAAA;;;;ADWnB,OAAM,MAAOC,iBAAP,CAAwB;EAI5BC,YAAoBC,KAApB,EAAkD;IAA9B;IAFb,kCAA+D,KAAKA,KAAL,CAAWC,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,yBAAzC,CAA/D;IAGL,KAAKJ,KAAL,CAAWC,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,KAAnC,EAA0CE,SAA1C,CAAqDH,KAAD,IAAiB;MACnE,IAAI,CAACA,KAAK,CAACE,yBAAN,EAAiCE,QAAjC,CAA0CC,UAA/C,EAA2D;QACzD,OAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB,IAAIZ,WAAW,CAACa,WAAhB,EAApB,CAAP;MACD;;MACD,KAAKT,KAAL,CAAWQ,QAAX,CAAoB,IAAIZ,WAAW,CAACc,WAAhB,CAA4B;QAAEC,sBAAsB,EAAET,KAAK,CAACS,sBAAhC;QAAwDP,yBAAyB,EAAEF,KAAK,CAACE;MAAzF,CAA5B,CAApB;IACD,CALD;EAMD;;AAX2B;;;mBAAjBN,mBAAiBD;AAAA;;;QAAjBC;EAAiBc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb9BnB;MACEA;;MAGFA;;;;;MAHwBA;MAAAA","names":["gameActions","i0","GameListComponent","constructor","store","select","state","games","selectedCategoryGameItems","subscribe","category","hasJackpot","dispatch","StopRefresh","GetJackpots","allCategoriesGameItems","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\andre-lourenco\\Desktop\\casino\\gaming\\src\\app\\category\\components\\game-list\\game-list.component.ts","C:\\Users\\andre-lourenco\\Desktop\\casino\\gaming\\src\\app\\category\\components\\game-list\\game-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { CategoryGames } from 'src/app/models/categories-games';\nimport { State } from 'src/app/ngrx-store/game.reducer';\nimport * as fromApp from '../../../ngrx-store/app.reducer';\nimport * as gameActions from '../../../ngrx-store/game.actions';\n\n@Component({\n  selector: 'app-game-list',\n  templateUrl: './game-list.component.html',\n  styleUrls: ['./game-list.component.scss']\n})\nexport class GameListComponent {\n\n  public selectedCategoryGameItems$: Observable<CategoryGames | null> = this.store.select((state) => state.games.selectedCategoryGameItems);\n\n  constructor(private store: Store<fromApp.AppState>) {\n    this.store.select((state) => state.games).subscribe((state: State) => {\n      if (!state.selectedCategoryGameItems?.category.hasJackpot) {\n        return this.store.dispatch(new gameActions.StopRefresh())\n      }\n      this.store.dispatch(new gameActions.GetJackpots({ allCategoriesGameItems: state.allCategoriesGameItems, selectedCategoryGameItems: state.selectedCategoryGameItems }));\n    });\n  }\n}\n","<div class=\"grid\">\n  <div *ngFor=\"let game of (selectedCategoryGameItems$ | async)?.games\">\n    <app-game-card [game]=\"game\"></app-game-card>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}